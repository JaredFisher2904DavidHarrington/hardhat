% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forge.R
\name{forge}
\alias{forge}
\title{Forge prediction-ready data}
\usage{
forge(preprocessor, new_data, outcomes = FALSE, ...)
}
\arguments{
\item{preprocessor}{A valid \code{"preprocessor"}. The preprocessor that should
be used here is the one in the output from the corresponding call
to \code{\link[=mold]{mold()}}.}

\item{new_data}{A data frame or matrix to preprocess.}

\item{outcomes}{A logical. Should the outcomes be processed and returned
as well?}

\item{...}{Not currently used.}
}
\value{
A named list with 3 elements:
\itemize{
\item \code{predictors}: A tibble containing the preprocessed
\code{new_data} predictors.
\item \code{outcomes}: If \code{outcomes = TRUE}, a tibble containing the preprocessed
\code{new_data} outcomes. Otherwise, \code{NULL}.
\item \code{offset}: If the \code{preprocessor} was a \code{"terms_preprocessor"}, and offsets
were specified in the formula, this is a tibble containing the preprocessed
offsets. Otherwise, \code{NULL}.
}
}
\description{
\code{forge()} applies the transformations requested by the \code{preprocessor}
on a set of \code{new_data} to be used in predictions.

The return values of each method are all consistent with one another, but the
nuances of exactly what is being done for each method vary enough to warrant
separate help files for each. Click through to each one below:
\itemize{
\item XY Method - \code{\link[=forge.default_preprocessor]{forge.default_preprocessor()}}
\item Formula Method - \code{\link[=forge.terms_preprocessor]{forge.terms_preprocessor()}}
\item Recipes Method - \code{\link[=forge.recipes_preprocessor]{forge.recipes_preprocessor()}}
}
}
\details{
If the outcomes are present in \code{new_data}, they can optionally be processed
and returned in the \code{outcomes} slot of the returned list. This is very
useful when doing cross validation where you need to preprocess the
outcomes of a test set before computing performance.
}
