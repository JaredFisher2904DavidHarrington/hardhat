% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mold-recipe.R
\name{mold.recipe}
\alias{mold.recipe}
\title{Mold - Recipes Method}
\usage{
\method{mold}{recipe}(x, data, intercept = FALSE, ...)
}
\arguments{
\item{x}{An unprepped recipe created from \code{\link[recipes:recipe]{recipes::recipe()}}.}

\item{data}{A data frame containing the predictors and the outcomes.}

\item{intercept}{A single logical specifying whether or not to
include an intercept in the molded predictors.}

\item{...}{Currently unused.}
}
\value{
A named list containing 4 elements:
\itemize{
\item \code{predictors}: A tibble containing the molded predictors to be used in the
model.
\item \code{outcome}: A tibble containing the molded outcomes to be used in the
model.
\item \code{preprocessor}: A \code{"preprocessor"} object for use when making predictions.
\item \code{offset}: A tibble with a single column named \code{".offset"} if an offset
was specified in the formula method. Otherwise, \code{NULL}.
}
}
\description{
For a recipe, \code{mold()} does the following:
\itemize{
\item Calls \code{\link[recipes:prep]{recipes::prep()}} to prep the recipe.
\item Calls \code{\link[recipes:juice]{recipes::juice()}} to extract the outcomes and predictors. These
are returned as tibbles.
\item If \code{intercept = TRUE}, adds an intercept column to the predictors.
}
}
\examples{
library(recipes)

# ---------------------------------------------------------------------------
# Recipes example

# Create a recipe that logs a predictor
rec <- recipe(Species ~ Sepal.Length + Sepal.Width, iris) \%>\%
   step_log(Sepal.Length)

processed <- mold(rec, iris)

# Sepal.Length has been logged
processed$predictors

processed$outcomes

# The underlying engine is a prepped recipe
processed$preprocessor$engine

# ---------------------------------------------------------------------------
# With an intercept

# You can add a predictor with `intercept = TRUE`
processed <- mold(rec, iris, intercept = TRUE)

processed$predictors

# But you also could have used a recipe step
rec2 <- step_intercept(rec)

mold(rec2, iris)$predictors

}
