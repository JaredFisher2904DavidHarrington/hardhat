% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructor.R
\name{new_base_model}
\alias{new_base_model}
\title{Constructor for a base model}
\usage{
new_base_model(preprocessor = NULL, ..., class)
}
\arguments{
\item{preprocessor}{A preprocessor for new data. This can be
a \code{terms} object from the formula interface, a \code{recipe} created with
\code{\link[recipes:recipe]{recipes::recipe()}}, or the default which converts to either a matrix or a
data frame, and adds an intercept column if requested.}

\item{...}{Name-value pairs for elements specific to the model defined by
\code{class}.}

\item{class}{A character vector representing the class of the model.}
}
\description{
A \strong{model} is a \emph{scalar object}, as classified in
\href{https://adv-r.hadley.nz/s3.html#object-styles}{Advanced R}. As such, it
takes uniquely named fields in \code{...} and combines them into a list with
a class of \code{class}. This entire object represent a single model.
}
\details{
Because every model should have multiple interfaces, including formula
and \code{recipes} interfaces, all models should have a \code{preprocessor} that
can process new data when \code{predict()} is called. The default \code{preprocessor}
used in the data frame and matrix methods is \code{default_preprocessor()}, which
converts an object to a data frame or matrix, and adds an intercept column
if required.
}
\examples{

new_base_model(
  custom_field = "my-field",
  class = "custom_model"
)

}
